CartDog is a modular cart operated via smartphone and Bluetooth connectivity to operate. The Bluefruit app is used for connectivity and is found in both the App Store and Google Play Store. 
The program is run via Arduino and references multiple libraries. The project is a custom made configuration of a GPS sensor and Arduino soldered with a rechargeable battery and servo motors.
The final circuitry components include the Bluefruit Adafruit LE Shield which was soldered onto the Arduino Mega, a breadboard connected to the Arduino mega, two servo motors connected to the breadboard, and two 9V batteries powering the breadboard and Arduino Mega separately.
The CartDog’s final CAD model includes the base of the cart connected to its wheels, axles, and servo motors, and the attachment part between the cart base and the cart or basket. The modifiable cart or basket is depicted with a three-tier cart. Because the final design no longer included a separate wearable device component, the final CAD model included only the CartDog itself.

RESULTS:
The CartDog was able to accomplish its goal of making it easy for users to move objects required for daily tasks such as grocery shopping or going to the laundromat. The final product is a moving base for any cart or basket and can be controlled by using a phone like a remote control. The steel construction and gear ratio of the final design allows for durability under the pressure applied by heavier loads. Velcro on the top two C-channels allows for modularity and the ability to attach any cart to serve the user’s needs.
One possible use of the CartDog is for grocery shopping. A tiered cart can easily be attached to the top of the motor base.
Other carts or baskets, such as a laundry basket, can be attached to the CartDog for uses such as going to the laundromat.

DIFFICULTIES EXPERIENCED:
Difficulties Experienced
The 3D printed connector part between the servo motor and the axle was not strong enough to rotate the axle with the servo motor after optimizing the part dimensions, filing the 3D printed part, and the heat press melted the 3D printed part. It seemed like all options had been used, and after the idea of screwing the gear into the servo motor failed, permission was given to use hot glue to glue the servo motor and axle together. The second attempt of heat pressing the 3D printed part was successful. However, the heat pressed connector part would fall off the servo motor onto the axle. Even hot gluing the connector part to the servo motor did not work; the hot glue fell off right away. The idea to create the axle spacer using Velcro to hold the connector part tight onto the servo motor solved this problem, and the design was successful in allowing the axle to rotate with the servo motors (without the use of hot glue).
Despite ordering a Bluetooth shield and 12V battery on October 10th, when the status of the order was checked on October 26th, it was found that these materials were not ordered. Without these materials, the components of the CartDog requiring Bluetooth, which entailed most of the software and circuitry tasks of the CartDog, could not be started. The materials did not arrive until after Benchmark B, greatly delaying the project schedule. 
After receiving and connecting the Bluetooth shield to the Arduino Mega, it became apparent that Bluetooth could not be used to measure the distance between the two Bluetooth modules as previously expected. Therefore, the team decided to use GPS modules to measure the longitude and latitude data from the CartDog. A new difficulty with the GPS modules was that they could only be used outside, inhibiting the functionality of the CartDog indoors. 
When adding the GPS modules to the motor base and bracelet, another problem was realized with the hardware for the bracelet: the Arduino Nano did not have a high enough voltage capacity for the GPS sensor, and the bracelet would have to use the larger SparkFun RedBoard instead. This would greatly increase the size of the bracelet, making it bulky and inconvenient to wear on the wrist. To replace this device, the team considered coding an app through the MIT app inventor to connect a phone to the CartDog. However, the MIT app inventor could only operate on Android, so it was decided to use the original idea of the wearable device containing the Bluetooth module and GPS sensor components. 
When attempting to connect the two Bluetooth modules (one on the CartDog and one on the wearable device), despite the help of multiple open lab TAs for about five hours, the Bluetooth modules were unable to connect properly. Luckily, an Adafruit Bluefruit Shield LE became available for use. The Bluefruit Shield LE could automatically connect to the Arduino mega of the motor base via Bluetooth using the Bluefruit Connect app and could also give location data from the phone to the Arduino Mega.
After confirming that the Arduino Mega was able to read the correct GPS data from both the CartDog base and phone, calculations were made to allow the CartDog base to follow the phone based on the GPS data. However, the GPS sensor only provided the longitude and latitude data, so the CartDog was lacking positional data. The cart could not automatically follow the phone without a magnetometer to find the direction of the cart. Therefore, the project was modified to allow the use of the control pad on the Bluefruit app to manually move the cart in the desired direction instead of following the phone automatically.


FUTURE IMPROVEMENTS:
Future improvements would include automating the CartDog movement, implementing object avoidance, and making the speed of the CartDog adjustable. To automate the CartDog movement, a magnetometer could be utilized with the GPS sensors, and code would be implemented to use the positional and directional data to allow the cart to follow the phone automatically.  To implement object avoidance, ultrasonic sensors could be installed and integrated into the code to detect and avoid obstacles. Finally, to create multiple speed settings, more servo motors could be used to increase the maximum speed, and the program can be modified to allow users to press on other buttons on the app to change the speed settings. A warning in-app and on the cart (audible or via LED) could be implemented for when the battery is running low or dead.



LIBRARIES USED:
Arduino.cc. 2023. “Servo – Arduino Reference.” Accessed 4 December 2023 from https://www.arduino.cc/reference/en/libraries/servo/
Arduino.cc. 2023. “TinyGPSPlus – Arduino Reference.” Accessed 5 December 2023 from https://www.arduino.cc/reference/en/libraries/tinygpsplus/
https://www.sciencedirect.com/science/article/pii/S1877042816305973?ref=pdf_download&fr=RR-2&rr=83075376681742d8
Lady Ada. 2023. “Adafruit Bluefruit LE Shield Software.” Accessed 4 December 2023 from https://learn.adafruit.com/adafruit-bluefruit-le-shield/software
Philipp Klimek. 2017. “JX PDI 6221MG Servo 180°.” Accessed 4 December 2023 from https://grabcad.com/library/jx-pdi-6221mg-servo-180-1